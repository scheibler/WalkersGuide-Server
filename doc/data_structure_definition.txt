Data structure definition for points and routes
===============================================



General
-------

*: attribute is mandatory
+: attribute is optional

WalkersGuide-Server version 1.2.0



Points
------

Point:
* type:             "point"
* sub_type:         String
* name:             String
* lat:              Double
* lon:              Double
+ node_id:          Long            node id from osm database
                    [node_id >= 0, default: unknown = -1]
+ tactile_paving:   Integer         tactile markings for white cane users
                    [0 = no, 1 = yes, 2 = incorrect, default: unknown = -1]
+ wheelchair:       Integer         wheelchair accessibility
                    [0 = no, 1 = limited, 2 = yes, default: unknown = -1]
+ turn:             Integer         turn in degree (only for routes)
                    [0 <= turn <= 359, default: unknown = -1]

intersection:                   extends from point
* type:                         "intersection"
* way_list:                     list<footway>               list of intersection ways
+ pedestrian_crossing_list:     list<pedestrian_crossing>   list of pedestrian crossings
+ number_of_streets:            Integer                     number of all streets
                                [number_of_streets >= 0, default: unknown = -1]
+ number_of_streets_with_name:  Integer                     number of big streets
                                [number_of_streets_with_name >= 0, default: unknown = -1]

GPS:                            extends from point
* type:                         "gps"
+ accuracy:                     Float
+ altitude:                     Double
+ bearing:                      Float
+ number_of_satellites:         Integer
+ provider:                     String          [gps, network, fused]
+ speed:                        Float
+ time:                         Long            Creation time

pedestrian_crossing:            extends from point
* type:                         "pedestrian_crossing"
+ traffic_signals_sound:        Integer         acustic signal for traffic signals
                                [0 = no, 1 = yes, default: unknown = -1]
+ traffic_signals_vibration:    Integer         tactile signal for traffic signals
                                [0 = no, 1 = yes, default: unknown = -1]

point_with_address_data:                  extends from point
+ display_name                  String
+ extra_name                    String
+ house_number:                 String
+ road:                         String
+ residential                   String
+ suburb                        String
+ city_district                 String
+ postcode                      String
+ city                          String
+ state                         String
+ country                       String
+ country_code                  String

entrance:                       extends from point_with_address_data
* type:                         "entrance"
+ label:                        String          entrance type (main, emergency, ect.)

StreetAddress:                  extends from point_with_address_data
* type:                         "street_address"

Poi:                            extends from point_with_address_data
* type:                         "poi"
+ entrance_list:                list<entrance>  list of entrances into this poi
+ is_inside:                    poi             poi is inside another building
+ email:                        String
+ phone:                        String
+ opening_hours:                String
+ website:                      String

station:                        extends from poi
* type:                         "station"
+ lines:                        list<line>      list of lines for this station
+ vehicles:                     list<string>    list of vehicles for this station
+ station_id                    Long            station id from deutsche bahn api
                                [station_id >= 0, default: unknown = -1]

Departure:
* nr:           String      line number
* to:           String      direction
* time:         Long        departure time (unix timestamp)

line:
* nr:       String      line number
+ to:       String      direction



Way segments
------------

segment:
* type:                     "segment"
* sub_type:                 String
* name:                     String

footway:                        extends from segment
* type:                     "footway"
* bearing:          Integer         Bearing of the way segment
                    [0 <= bearing <= 359, default: unknown = -1]
+ description:              String          Additional description
+ lanes:                    Integer         number of street lanes
                                [lanes >= 0, default: unknown = -1]
+ maxspeed:                 Integer         Maximal speed in km/h
                                [maxspeed >= 0, default: unknown = -1]
+ pois:                     List<Point>     List of points (e. x. intersections along the way)
+ segregated:               Integer         shared ways like footway/cycleway use different lanes
                                [0 = no, 1 = yes, default: -1 = unknown]
+ sidewalk:                 Integer         street contains sidewalk
                                [0 = no, 1 = left, 2 = right, 3 = both, default: -1 = unknown]
+ smoothness:               String
+ surface:                  String
+ tactile_paving:           Integer         tactile markings for white cane users
                                [0 = no, 1 = yes, 2 = incorrect, default: unknown = -1]
+ tram:                     Integer         tran railway on street
                                [0 = no, 1 = yes, default: -1 = unknown]
+ way_id                    Long            way id from osm database
                                [way_id >= 0, default: unknown = -1]
+ wheelchair:               Integer         wheelchair accessibility
                                [0 = no, 1 = limited, 2 = yes, default: unknown = -1]
+ width:                    Double          way width of way
                                [width >= 0.0, default: unknown = -1.0]

intersection_segment:           extends from footway
* type:                         "footway_intersection"
* intersection_name:            String
+ next_node_id:                 Long            Next node id from osm database
                                    [next_node_id >= 0, default: unknown = -1]
+ part_of_previous_route_segment    Boolean         part of the previous route segment
+ part_of_next_route_segment    Boolean         part of the next route segment

route_segment:                  extends from footway
* type:                     "footway_route"
* distance:         Integer         Distance of the segment between two route points
                    [distance >= 0, default: unknown = -1]



Other
-----

Map:
* name: String
* description: String
* created: Long
* urls: List<String>
* version: Integer

HikingTrail:
* name:                     String
* relation_id:              Long
* distance_to_closest:      Integer     Distance in meter
* distance_to_start:        Integer     Distance in meter
* distance_to_destination:  Integer     Distance in meter
+ description:              String
+ trail_length:             String
+ symbol:                   String

